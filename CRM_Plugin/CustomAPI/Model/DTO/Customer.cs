using Microsoft.Xrm.Sdk;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EntityHelpers = CRM_Plugin.CustomAPI.Helper.EntityHelper;

namespace CRM_Plugin.CustomAPI.Model.DTO
{
    public class Customer : Core.Model.CustomerBase
    {


        public Customer(ParameterCollection collection)
        {

            string ErrorEntity = "";
            try
            {
                ErrorEntity = EntityHelpers.Customer.kti_customerDTO;

                var CustomerDTO = (Entity)collection[EntityHelpers.Customer.kti_customerDTO];

                ErrorEntity = EntityHelpers.Customer.sap_customer_card_code;
                this.sap_customer_card_code = CustomerDTO.Contains(EntityHelpers.Customer.sap_customer_card_code) ? (string)CustomerDTO[EntityHelpers.Customer.sap_customer_card_code] : default;
                ErrorEntity = EntityHelpers.Customer.accountrolecode;
                this.accountrolecode = CustomerDTO.Contains(EntityHelpers.Customer.accountrolecode) ? (int)CustomerDTO[EntityHelpers.Customer.accountrolecode] : default;
                ErrorEntity = EntityHelpers.Customer.address1_addressid;
                this.address1_addressid = CustomerDTO.Contains(EntityHelpers.Customer.address1_addressid) ? (string)CustomerDTO[EntityHelpers.Customer.address1_addressid] : default;
                ErrorEntity = EntityHelpers.Customer.address1_addresstypecode;
                this.address1_addresstypecode = CustomerDTO.Contains(EntityHelpers.Customer.address1_addresstypecode) ? (int)CustomerDTO[EntityHelpers.Customer.address1_addresstypecode] : default;
                ErrorEntity = EntityHelpers.Customer.address1_city;
                this.address1_city = CustomerDTO.Contains(EntityHelpers.Customer.address1_city) ? (string)CustomerDTO[EntityHelpers.Customer.address1_city] : default;
                ErrorEntity = EntityHelpers.Customer.address1_country;
                this.address1_country = CustomerDTO.Contains(EntityHelpers.Customer.address1_country) ? (string)CustomerDTO[EntityHelpers.Customer.address1_country] : default;
                ErrorEntity = EntityHelpers.Customer.address1_county;
                this.address1_county = CustomerDTO.Contains(EntityHelpers.Customer.address1_county) ? (string)CustomerDTO[EntityHelpers.Customer.address1_county] : default;
                ErrorEntity = EntityHelpers.Customer.address1_fax;
                this.address1_fax = CustomerDTO.Contains(EntityHelpers.Customer.address1_fax) ? (string)CustomerDTO[EntityHelpers.Customer.address1_fax] : default;
                ErrorEntity = EntityHelpers.Customer.address1_freighttermscode;
                this.address1_freighttermscode = CustomerDTO.Contains(EntityHelpers.Customer.address1_freighttermscode) ? (int)CustomerDTO[EntityHelpers.Customer.address1_freighttermscode] : default;
                ErrorEntity = EntityHelpers.Customer.address1_latitude;
                this.address1_latitude = CustomerDTO.Contains(EntityHelpers.Customer.address1_latitude) ? (double)CustomerDTO[EntityHelpers.Customer.address1_latitude] : default;
                ErrorEntity = EntityHelpers.Customer.address1_line1;
                this.address1_line1 = CustomerDTO.Contains(EntityHelpers.Customer.address1_line1) ? (string)CustomerDTO[EntityHelpers.Customer.address1_line1] : default;
                ErrorEntity = EntityHelpers.Customer.address1_line2;
                this.address1_line2 = CustomerDTO.Contains(EntityHelpers.Customer.address1_line2) ? (string)CustomerDTO[EntityHelpers.Customer.address1_line2] : default;
                ErrorEntity = EntityHelpers.Customer.address1_line3;
                this.address1_line3 = CustomerDTO.Contains(EntityHelpers.Customer.address1_line3) ? (string)CustomerDTO[EntityHelpers.Customer.address1_line3] : default;
                ErrorEntity = EntityHelpers.Customer.address1_longitude;
                this.address1_longitude = CustomerDTO.Contains(EntityHelpers.Customer.address1_longitude) ? (double)CustomerDTO[EntityHelpers.Customer.address1_longitude] : default;
                ErrorEntity = EntityHelpers.Customer.address1_name;
                this.address1_name = CustomerDTO.Contains(EntityHelpers.Customer.address1_name) ? (string)CustomerDTO[EntityHelpers.Customer.address1_name] : default;
                ErrorEntity = EntityHelpers.Customer.address1_postalcode;
                this.address1_postalcode = CustomerDTO.Contains(EntityHelpers.Customer.address1_postalcode) ? (string)CustomerDTO[EntityHelpers.Customer.address1_postalcode] : default;
                ErrorEntity = EntityHelpers.Customer.address1_postofficebox;
                this.address1_postofficebox = CustomerDTO.Contains(EntityHelpers.Customer.address1_postofficebox) ? (string)CustomerDTO[EntityHelpers.Customer.address1_postofficebox] : default;
                ErrorEntity = EntityHelpers.Customer.address1_primarycontactname;
                this.address1_primarycontactname = CustomerDTO.Contains(EntityHelpers.Customer.address1_primarycontactname) ? (string)CustomerDTO[EntityHelpers.Customer.address1_primarycontactname] : default;
                ErrorEntity = EntityHelpers.Customer.address1_shippingmethodcode;
                this.address1_shippingmethodcode = CustomerDTO.Contains(EntityHelpers.Customer.address1_shippingmethodcode) ? (int)CustomerDTO[EntityHelpers.Customer.address1_shippingmethodcode] : default;
                ErrorEntity = EntityHelpers.Customer.address1_stateorprovince;
                this.address1_stateorprovince = CustomerDTO.Contains(EntityHelpers.Customer.address1_stateorprovince) ? (string)CustomerDTO[EntityHelpers.Customer.address1_stateorprovince] : default;
                ErrorEntity = EntityHelpers.Customer.address1_telephone1;
                this.address1_telephone1 = CustomerDTO.Contains(EntityHelpers.Customer.address1_telephone1) ? (string)CustomerDTO[EntityHelpers.Customer.address1_telephone1] : default;
                ErrorEntity = EntityHelpers.Customer.address1_telephone2;
                this.address1_telephone2 = CustomerDTO.Contains(EntityHelpers.Customer.address1_telephone2) ? (string)CustomerDTO[EntityHelpers.Customer.address1_telephone2] : default;
                ErrorEntity = EntityHelpers.Customer.address1_telephone3;
                this.address1_telephone3 = CustomerDTO.Contains(EntityHelpers.Customer.address1_telephone3) ? (string)CustomerDTO[EntityHelpers.Customer.address1_telephone3] : default;
                ErrorEntity = EntityHelpers.Customer.address1_upszone;
                this.address1_upszone = CustomerDTO.Contains(EntityHelpers.Customer.address1_upszone) ? (string)CustomerDTO[EntityHelpers.Customer.address1_upszone] : default;
                ErrorEntity = EntityHelpers.Customer.address1_utcoffset;
                this.address1_utcoffset = CustomerDTO.Contains(EntityHelpers.Customer.address1_utcoffset) ? (int)CustomerDTO[EntityHelpers.Customer.address1_utcoffset] : default;
                ErrorEntity = EntityHelpers.Customer.address2_addressid;
                this.address2_addressid = CustomerDTO.Contains(EntityHelpers.Customer.address2_addressid) ? (string)CustomerDTO[EntityHelpers.Customer.address2_addressid] : default;
                ErrorEntity = EntityHelpers.Customer.address2_addresstypecode;
                this.address2_addresstypecode = CustomerDTO.Contains(EntityHelpers.Customer.address2_addresstypecode) ? (int)CustomerDTO[EntityHelpers.Customer.address2_addresstypecode] : default;
                ErrorEntity = EntityHelpers.Customer.address2_city;
                this.address2_city = CustomerDTO.Contains(EntityHelpers.Customer.address2_city) ? (string)CustomerDTO[EntityHelpers.Customer.address2_city] : default;
                ErrorEntity = EntityHelpers.Customer.address2_country;
                this.address2_country = CustomerDTO.Contains(EntityHelpers.Customer.address2_country) ? (string)CustomerDTO[EntityHelpers.Customer.address2_country] : default;
                ErrorEntity = EntityHelpers.Customer.address2_county;
                this.address2_county = CustomerDTO.Contains(EntityHelpers.Customer.address2_county) ? (string)CustomerDTO[EntityHelpers.Customer.address2_county] : default;
                ErrorEntity = EntityHelpers.Customer.address2_fax;
                this.address2_fax = CustomerDTO.Contains(EntityHelpers.Customer.address2_fax) ? (string)CustomerDTO[EntityHelpers.Customer.address2_fax] : default;
                ErrorEntity = EntityHelpers.Customer.address2_freighttermscode;
                this.address2_freighttermscode = CustomerDTO.Contains(EntityHelpers.Customer.address2_freighttermscode) ? (int)CustomerDTO[EntityHelpers.Customer.address2_freighttermscode] : default;
                ErrorEntity = EntityHelpers.Customer.address2_latitude;
                this.address2_latitude = CustomerDTO.Contains(EntityHelpers.Customer.address2_latitude) ? (double)CustomerDTO[EntityHelpers.Customer.address2_latitude] : default;
                ErrorEntity = EntityHelpers.Customer.address2_line1;
                this.address2_line1 = CustomerDTO.Contains(EntityHelpers.Customer.address2_line1) ? (string)CustomerDTO[EntityHelpers.Customer.address2_line1] : default;
                ErrorEntity = EntityHelpers.Customer.address2_line2;
                this.address2_line2 = CustomerDTO.Contains(EntityHelpers.Customer.address2_line2) ? (string)CustomerDTO[EntityHelpers.Customer.address2_line2] : default;
                ErrorEntity = EntityHelpers.Customer.address2_line3;
                this.address2_line3 = CustomerDTO.Contains(EntityHelpers.Customer.address2_line3) ? (string)CustomerDTO[EntityHelpers.Customer.address2_line3] : default;
                ErrorEntity = EntityHelpers.Customer.address2_longitude;
                this.address2_longitude = CustomerDTO.Contains(EntityHelpers.Customer.address2_longitude) ? (double)CustomerDTO[EntityHelpers.Customer.address2_longitude] : default;
                ErrorEntity = EntityHelpers.Customer.address2_name;
                this.address2_name = CustomerDTO.Contains(EntityHelpers.Customer.address2_name) ? (string)CustomerDTO[EntityHelpers.Customer.address2_name] : default;
                ErrorEntity = EntityHelpers.Customer.address2_postalcode;
                this.address2_postalcode = CustomerDTO.Contains(EntityHelpers.Customer.address2_postalcode) ? (string)CustomerDTO[EntityHelpers.Customer.address2_postalcode] : default;
                ErrorEntity = EntityHelpers.Customer.address2_postofficebox;
                this.address2_postofficebox = CustomerDTO.Contains(EntityHelpers.Customer.address2_postofficebox) ? (string)CustomerDTO[EntityHelpers.Customer.address2_postofficebox] : default;
                ErrorEntity = EntityHelpers.Customer.address2_primarycontactname;
                this.address2_primarycontactname = CustomerDTO.Contains(EntityHelpers.Customer.address2_primarycontactname) ? (string)CustomerDTO[EntityHelpers.Customer.address2_primarycontactname] : default;
                ErrorEntity = EntityHelpers.Customer.address2_shippingmethodcode;
                this.address2_shippingmethodcode = CustomerDTO.Contains(EntityHelpers.Customer.address2_shippingmethodcode) ? (int)CustomerDTO[EntityHelpers.Customer.address2_shippingmethodcode] : default;
                ErrorEntity = EntityHelpers.Customer.address2_stateorprovince;
                this.address2_stateorprovince = CustomerDTO.Contains(EntityHelpers.Customer.address2_stateorprovince) ? (string)CustomerDTO[EntityHelpers.Customer.address2_stateorprovince] : default;
                ErrorEntity = EntityHelpers.Customer.address2_telephone1;
                this.address2_telephone1 = CustomerDTO.Contains(EntityHelpers.Customer.address2_telephone1) ? (string)CustomerDTO[EntityHelpers.Customer.address2_telephone1] : default;
                ErrorEntity = EntityHelpers.Customer.address2_telephone2;
                this.address2_telephone2 = CustomerDTO.Contains(EntityHelpers.Customer.address2_telephone2) ? (string)CustomerDTO[EntityHelpers.Customer.address2_telephone2] : default;
                ErrorEntity = EntityHelpers.Customer.address2_telephone3;
                this.address2_telephone3 = CustomerDTO.Contains(EntityHelpers.Customer.address2_telephone3) ? (string)CustomerDTO[EntityHelpers.Customer.address2_telephone3] : default;
                ErrorEntity = EntityHelpers.Customer.address2_upszone;
                this.address2_upszone = CustomerDTO.Contains(EntityHelpers.Customer.address2_upszone) ? (string)CustomerDTO[EntityHelpers.Customer.address2_upszone] : default;
                ErrorEntity = EntityHelpers.Customer.address2_utcoffset;
                this.address2_utcoffset = CustomerDTO.Contains(EntityHelpers.Customer.address2_utcoffset) ? (int)CustomerDTO[EntityHelpers.Customer.address2_utcoffset] : default;
                ErrorEntity = EntityHelpers.Customer.address3_addressid;
                this.address3_addressid = CustomerDTO.Contains(EntityHelpers.Customer.address3_addressid) ? (string)CustomerDTO[EntityHelpers.Customer.address3_addressid] : default;
                ErrorEntity = EntityHelpers.Customer.address3_addresstypecode;
                this.address3_addresstypecode = CustomerDTO.Contains(EntityHelpers.Customer.address3_addresstypecode) ? (int)CustomerDTO[EntityHelpers.Customer.address3_addresstypecode] : default;
                ErrorEntity = EntityHelpers.Customer.address3_city;
                this.address3_city = CustomerDTO.Contains(EntityHelpers.Customer.address3_city) ? (string)CustomerDTO[EntityHelpers.Customer.address3_city] : default;
                ErrorEntity = EntityHelpers.Customer.address3_country;
                this.address3_country = CustomerDTO.Contains(EntityHelpers.Customer.address3_country) ? (string)CustomerDTO[EntityHelpers.Customer.address3_country] : default;
                ErrorEntity = EntityHelpers.Customer.address3_county;
                this.address3_county = CustomerDTO.Contains(EntityHelpers.Customer.address3_county) ? (string)CustomerDTO[EntityHelpers.Customer.address3_county] : default;
                ErrorEntity = EntityHelpers.Customer.address3_fax;
                this.address3_fax = CustomerDTO.Contains(EntityHelpers.Customer.address3_fax) ? (string)CustomerDTO[EntityHelpers.Customer.address3_fax] : default;
                ErrorEntity = EntityHelpers.Customer.address3_freighttermscode;
                this.address3_freighttermscode = CustomerDTO.Contains(EntityHelpers.Customer.address3_freighttermscode) ? (int)CustomerDTO[EntityHelpers.Customer.address3_freighttermscode] : default;
                ErrorEntity = EntityHelpers.Customer.address3_latitude;
                this.address3_latitude = CustomerDTO.Contains(EntityHelpers.Customer.address3_latitude) ? (double)CustomerDTO[EntityHelpers.Customer.address3_latitude] : default;
                ErrorEntity = EntityHelpers.Customer.address3_line1;
                this.address3_line1 = CustomerDTO.Contains(EntityHelpers.Customer.address3_line1) ? (string)CustomerDTO[EntityHelpers.Customer.address3_line1] : default;
                ErrorEntity = EntityHelpers.Customer.address3_line2;
                this.address3_line2 = CustomerDTO.Contains(EntityHelpers.Customer.address3_line2) ? (string)CustomerDTO[EntityHelpers.Customer.address3_line2] : default;
                ErrorEntity = EntityHelpers.Customer.address3_line3;
                this.address3_line3 = CustomerDTO.Contains(EntityHelpers.Customer.address3_line3) ? (string)CustomerDTO[EntityHelpers.Customer.address3_line3] : default;
                ErrorEntity = EntityHelpers.Customer.address3_longitude;
                this.address3_longitude = CustomerDTO.Contains(EntityHelpers.Customer.address3_longitude) ? (double)CustomerDTO[EntityHelpers.Customer.address3_longitude] : default;
                ErrorEntity = EntityHelpers.Customer.address3_name;
                this.address3_name = CustomerDTO.Contains(EntityHelpers.Customer.address3_name) ? (string)CustomerDTO[EntityHelpers.Customer.address3_name] : default;
                ErrorEntity = EntityHelpers.Customer.address3_postalcode;
                this.address3_postalcode = CustomerDTO.Contains(EntityHelpers.Customer.address3_postalcode) ? (string)CustomerDTO[EntityHelpers.Customer.address3_postalcode] : default;
                ErrorEntity = EntityHelpers.Customer.address3_postofficebox;
                this.address3_postofficebox = CustomerDTO.Contains(EntityHelpers.Customer.address3_postofficebox) ? (string)CustomerDTO[EntityHelpers.Customer.address3_postofficebox] : default;
                ErrorEntity = EntityHelpers.Customer.address3_primarycontactname;
                this.address3_primarycontactname = CustomerDTO.Contains(EntityHelpers.Customer.address3_primarycontactname) ? (string)CustomerDTO[EntityHelpers.Customer.address3_primarycontactname] : default;
                ErrorEntity = EntityHelpers.Customer.address3_shippingmethodcode;
                this.address3_shippingmethodcode = CustomerDTO.Contains(EntityHelpers.Customer.address3_shippingmethodcode) ? (int)CustomerDTO[EntityHelpers.Customer.address3_shippingmethodcode] : default;
                ErrorEntity = EntityHelpers.Customer.address3_stateorprovince;
                this.address3_stateorprovince = CustomerDTO.Contains(EntityHelpers.Customer.address3_stateorprovince) ? (string)CustomerDTO[EntityHelpers.Customer.address3_stateorprovince] : default;
                ErrorEntity = EntityHelpers.Customer.address3_telephone1;
                this.address3_telephone1 = CustomerDTO.Contains(EntityHelpers.Customer.address3_telephone1) ? (string)CustomerDTO[EntityHelpers.Customer.address3_telephone1] : default;
                ErrorEntity = EntityHelpers.Customer.address3_telephone2;
                this.address3_telephone2 = CustomerDTO.Contains(EntityHelpers.Customer.address3_telephone2) ? (string)CustomerDTO[EntityHelpers.Customer.address3_telephone2] : default;
                ErrorEntity = EntityHelpers.Customer.address3_telephone3;
                this.address3_telephone3 = CustomerDTO.Contains(EntityHelpers.Customer.address3_telephone3) ? (string)CustomerDTO[EntityHelpers.Customer.address3_telephone3] : default;
                ErrorEntity = EntityHelpers.Customer.address3_upszone;
                this.address3_upszone = CustomerDTO.Contains(EntityHelpers.Customer.address3_upszone) ? (string)CustomerDTO[EntityHelpers.Customer.address3_upszone] : default;
                ErrorEntity = EntityHelpers.Customer.address3_utcoffset;
                this.address3_utcoffset = CustomerDTO.Contains(EntityHelpers.Customer.address3_utcoffset) ? (int)CustomerDTO[EntityHelpers.Customer.address3_utcoffset] : default;
                ErrorEntity = EntityHelpers.Customer.anniversary;
                this.anniversary = CustomerDTO.Contains(EntityHelpers.Customer.anniversary) ? (DateTime)CustomerDTO[EntityHelpers.Customer.anniversary] : default;
                ErrorEntity = EntityHelpers.Customer.annualincome;
                this.annualincome = CustomerDTO.Contains(EntityHelpers.Customer.annualincome) ? (decimal)CustomerDTO[EntityHelpers.Customer.annualincome] : default;
                ErrorEntity = EntityHelpers.Customer.assistantname;
                this.assistantname = CustomerDTO.Contains(EntityHelpers.Customer.assistantname) ? (string)CustomerDTO[EntityHelpers.Customer.assistantname] : default;
                ErrorEntity = EntityHelpers.Customer.assistantphone;
                this.assistantphone = CustomerDTO.Contains(EntityHelpers.Customer.assistantphone) ? (string)CustomerDTO[EntityHelpers.Customer.assistantphone] : default;
                ErrorEntity = EntityHelpers.Customer.birthdate;
                this.birthdate = CustomerDTO.Contains(EntityHelpers.Customer.birthdate) ? (string)CustomerDTO[EntityHelpers.Customer.birthdate] : default;
                ErrorEntity = EntityHelpers.Customer.business2;
                this.business2 = CustomerDTO.Contains(EntityHelpers.Customer.business2) ? (string)CustomerDTO[EntityHelpers.Customer.business2] : default;
                ErrorEntity = EntityHelpers.Customer.callback;
                this.callback = CustomerDTO.Contains(EntityHelpers.Customer.callback) ? (string)CustomerDTO[EntityHelpers.Customer.callback] : default;
                ErrorEntity = EntityHelpers.Customer.childrensnames;
                this.childrensnames = CustomerDTO.Contains(EntityHelpers.Customer.childrensnames) ? (string)CustomerDTO[EntityHelpers.Customer.childrensnames] : default;
                ErrorEntity = EntityHelpers.Customer.company;
                this.company = CustomerDTO.Contains(EntityHelpers.Customer.company) ? (string)CustomerDTO[EntityHelpers.Customer.company] : default;
                ErrorEntity = EntityHelpers.Customer.contactid;
                this.contactid = CustomerDTO.Contains(EntityHelpers.Customer.contactid) ? (string)CustomerDTO[EntityHelpers.Customer.contactid] : default;
                ErrorEntity = EntityHelpers.Customer.creditlimit;
                this.creditlimit = CustomerDTO.Contains(EntityHelpers.Customer.creditlimit) ? (decimal)CustomerDTO[EntityHelpers.Customer.creditlimit] : default;
                ErrorEntity = EntityHelpers.Customer.creditonhold;
                this.creditonhold = CustomerDTO.Contains(EntityHelpers.Customer.creditonhold) ? (bool)CustomerDTO[EntityHelpers.Customer.creditonhold] : default;
                ErrorEntity = EntityHelpers.Customer.customersizecode;
                this.customersizecode = CustomerDTO.Contains(EntityHelpers.Customer.customersizecode) ? (int)CustomerDTO[EntityHelpers.Customer.customersizecode] : default;
                ErrorEntity = EntityHelpers.Customer.customertypecode;
                this.customertypecode = CustomerDTO.Contains(EntityHelpers.Customer.customertypecode) ? (int)CustomerDTO[EntityHelpers.Customer.customertypecode] : default;
                ErrorEntity = EntityHelpers.Customer.defaultpricelevelid;
                this.defaultpricelevelid = CustomerDTO.Contains(EntityHelpers.Customer.defaultpricelevelid) ? (string)CustomerDTO[EntityHelpers.Customer.defaultpricelevelid] : default;
                ErrorEntity = EntityHelpers.Customer.department;
                this.department = CustomerDTO.Contains(EntityHelpers.Customer.department) ? (string)CustomerDTO[EntityHelpers.Customer.department] : default;
                ErrorEntity = EntityHelpers.Customer.description;
                this.description = CustomerDTO.Contains(EntityHelpers.Customer.description) ? (string)CustomerDTO[EntityHelpers.Customer.description] : default;
                ErrorEntity = EntityHelpers.Customer.donotbulkemail;
                this.donotbulkemail = CustomerDTO.Contains(EntityHelpers.Customer.donotbulkemail) ? (bool)CustomerDTO[EntityHelpers.Customer.donotbulkemail] : default;
                ErrorEntity = EntityHelpers.Customer.donotbulkpostalmail;
                this.donotbulkpostalmail = CustomerDTO.Contains(EntityHelpers.Customer.donotbulkpostalmail) ? (bool)CustomerDTO[EntityHelpers.Customer.donotbulkpostalmail] : default;
                ErrorEntity = EntityHelpers.Customer.donotemail;
                this.donotemail = CustomerDTO.Contains(EntityHelpers.Customer.donotemail) ? (bool)CustomerDTO[EntityHelpers.Customer.donotemail] : default;
                ErrorEntity = EntityHelpers.Customer.donotfax;
                this.donotfax = CustomerDTO.Contains(EntityHelpers.Customer.donotfax) ? (bool)CustomerDTO[EntityHelpers.Customer.donotfax] : default;
                ErrorEntity = EntityHelpers.Customer.donotphone;
                this.donotphone = CustomerDTO.Contains(EntityHelpers.Customer.donotphone) ? (bool)CustomerDTO[EntityHelpers.Customer.donotphone] : default;
                ErrorEntity = EntityHelpers.Customer.donotpostalmail;
                this.donotpostalmail = CustomerDTO.Contains(EntityHelpers.Customer.donotpostalmail) ? (bool)CustomerDTO[EntityHelpers.Customer.donotpostalmail] : default;
                ErrorEntity = EntityHelpers.Customer.donotsendmm;
                this.donotsendmm = CustomerDTO.Contains(EntityHelpers.Customer.donotsendmm) ? (bool)CustomerDTO[EntityHelpers.Customer.donotsendmm] : default;
                ErrorEntity = EntityHelpers.Customer.educationcode;
                this.educationcode = CustomerDTO.Contains(EntityHelpers.Customer.educationcode) ? (int)CustomerDTO[EntityHelpers.Customer.educationcode] : default;
                ErrorEntity = EntityHelpers.Customer.emailaddress1;
                this.emailaddress1 = CustomerDTO.Contains(EntityHelpers.Customer.emailaddress1) ? (string)CustomerDTO[EntityHelpers.Customer.emailaddress1] : default;
                ErrorEntity = EntityHelpers.Customer.emailaddress2;
                this.emailaddress2 = CustomerDTO.Contains(EntityHelpers.Customer.emailaddress2) ? (string)CustomerDTO[EntityHelpers.Customer.emailaddress2] : default;
                ErrorEntity = EntityHelpers.Customer.emailaddress3;
                this.emailaddress3 = CustomerDTO.Contains(EntityHelpers.Customer.emailaddress3) ? (string)CustomerDTO[EntityHelpers.Customer.emailaddress3] : default;
                ErrorEntity = EntityHelpers.Customer.employeeid;
                this.employeeid = CustomerDTO.Contains(EntityHelpers.Customer.employeeid) ? (string)CustomerDTO[EntityHelpers.Customer.employeeid] : default;
                ErrorEntity = EntityHelpers.Customer.entityimage;
                this.entityimage = CustomerDTO.Contains(EntityHelpers.Customer.entityimage) ? (string)CustomerDTO[EntityHelpers.Customer.entityimage] : default;
                ErrorEntity = EntityHelpers.Customer.externaluseridentifier;
                this.externaluseridentifier = CustomerDTO.Contains(EntityHelpers.Customer.externaluseridentifier) ? (string)CustomerDTO[EntityHelpers.Customer.externaluseridentifier] : default;
                ErrorEntity = EntityHelpers.Customer.familystatuscode;
                this.familystatuscode = CustomerDTO.Contains(EntityHelpers.Customer.familystatuscode) ? (int)CustomerDTO[EntityHelpers.Customer.familystatuscode] : default;
                ErrorEntity = EntityHelpers.Customer.fax;
                this.fax = CustomerDTO.Contains(EntityHelpers.Customer.fax) ? (string)CustomerDTO[EntityHelpers.Customer.fax] : default;
                ErrorEntity = EntityHelpers.Customer.firstname;
                this.firstname = CustomerDTO.Contains(EntityHelpers.Customer.firstname) ? (string)CustomerDTO[EntityHelpers.Customer.firstname] : default;
                ErrorEntity = EntityHelpers.Customer.followemail;
                this.followemail = CustomerDTO.Contains(EntityHelpers.Customer.followemail) ? (bool)CustomerDTO[EntityHelpers.Customer.followemail] : default;
                ErrorEntity = EntityHelpers.Customer.ftpsiteurl;
                this.ftpsiteurl = CustomerDTO.Contains(EntityHelpers.Customer.ftpsiteurl) ? (string)CustomerDTO[EntityHelpers.Customer.ftpsiteurl] : default;
                ErrorEntity = EntityHelpers.Customer.gendercode;
                this.gendercode = CustomerDTO.Contains(EntityHelpers.Customer.gendercode) ? (int)CustomerDTO[EntityHelpers.Customer.gendercode] : default;
                ErrorEntity = EntityHelpers.Customer.governmentid;
                this.governmentid = CustomerDTO.Contains(EntityHelpers.Customer.governmentid) ? (string)CustomerDTO[EntityHelpers.Customer.governmentid] : default;
                ErrorEntity = EntityHelpers.Customer.haschildrencode;
                this.haschildrencode = CustomerDTO.Contains(EntityHelpers.Customer.haschildrencode) ? (int)CustomerDTO[EntityHelpers.Customer.haschildrencode] : default;
                ErrorEntity = EntityHelpers.Customer.home2;
                this.home2 = CustomerDTO.Contains(EntityHelpers.Customer.home2) ? (string)CustomerDTO[EntityHelpers.Customer.home2] : default;
                ErrorEntity = EntityHelpers.Customer.importsequencenumber;
                this.importsequencenumber = CustomerDTO.Contains(EntityHelpers.Customer.importsequencenumber) ? (int)CustomerDTO[EntityHelpers.Customer.importsequencenumber] : default;
                ErrorEntity = EntityHelpers.Customer.isbackofficecustomer;
                this.isbackofficecustomer = CustomerDTO.Contains(EntityHelpers.Customer.isbackofficecustomer) ? (bool)CustomerDTO[EntityHelpers.Customer.isbackofficecustomer] : default;
                ErrorEntity = EntityHelpers.Customer.jobtitle;
                this.jobtitle = CustomerDTO.Contains(EntityHelpers.Customer.jobtitle) ? (string)CustomerDTO[EntityHelpers.Customer.jobtitle] : default;
                ErrorEntity = EntityHelpers.Customer.lastname;
                this.lastname = CustomerDTO.Contains(EntityHelpers.Customer.lastname) ? (string)CustomerDTO[EntityHelpers.Customer.lastname] : default;
                ErrorEntity = EntityHelpers.Customer.lastonholdtime;
                this.lastonholdtime = CustomerDTO.Contains(EntityHelpers.Customer.lastonholdtime) ? (DateTime)CustomerDTO[EntityHelpers.Customer.lastonholdtime] : default;
                ErrorEntity = EntityHelpers.Customer.lastusedincampaign;
                this.lastusedincampaign = CustomerDTO.Contains(EntityHelpers.Customer.lastusedincampaign) ? (DateTime)CustomerDTO[EntityHelpers.Customer.lastusedincampaign] : default;
                ErrorEntity = EntityHelpers.Customer.leadsourcecode;
                this.leadsourcecode = CustomerDTO.Contains(EntityHelpers.Customer.leadsourcecode) ? (int)CustomerDTO[EntityHelpers.Customer.leadsourcecode] : default;
                ErrorEntity = EntityHelpers.Customer.managername;
                this.managername = CustomerDTO.Contains(EntityHelpers.Customer.managername) ? (string)CustomerDTO[EntityHelpers.Customer.managername] : default;
                ErrorEntity = EntityHelpers.Customer.managerphone;
                this.managerphone = CustomerDTO.Contains(EntityHelpers.Customer.managerphone) ? (string)CustomerDTO[EntityHelpers.Customer.managerphone] : default;
                ErrorEntity = EntityHelpers.Customer.marketingonly;
                this.marketingonly = CustomerDTO.Contains(EntityHelpers.Customer.marketingonly) ? (bool)CustomerDTO[EntityHelpers.Customer.marketingonly] : default;
                ErrorEntity = EntityHelpers.Customer.middlename;
                this.middlename = CustomerDTO.Contains(EntityHelpers.Customer.middlename) ? (string)CustomerDTO[EntityHelpers.Customer.middlename] : default;
                ErrorEntity = EntityHelpers.Customer.mobilephone;
                this.mobilephone = CustomerDTO.Contains(EntityHelpers.Customer.mobilephone) ? (string)CustomerDTO[EntityHelpers.Customer.mobilephone] : default;
                ErrorEntity = EntityHelpers.Customer.orgchangestatus;
                this.orgchangestatus = CustomerDTO.Contains(EntityHelpers.Customer.orgchangestatus) ? (int)CustomerDTO[EntityHelpers.Customer.orgchangestatus] : default;
                ErrorEntity = EntityHelpers.Customer.nickname;
                this.nickname = CustomerDTO.Contains(EntityHelpers.Customer.nickname) ? (string)CustomerDTO[EntityHelpers.Customer.nickname] : default;
                ErrorEntity = EntityHelpers.Customer.numberofchildren;
                this.numberofchildren = CustomerDTO.Contains(EntityHelpers.Customer.numberofchildren) ? (int)CustomerDTO[EntityHelpers.Customer.numberofchildren] : default;
                ErrorEntity = EntityHelpers.Customer.originatingleadid;
                this.originatingleadid = CustomerDTO.Contains(EntityHelpers.Customer.originatingleadid) ? (string)CustomerDTO[EntityHelpers.Customer.originatingleadid] : default;
                ErrorEntity = EntityHelpers.Customer.overriddencreatedon;
                this.overriddencreatedon = CustomerDTO.Contains(EntityHelpers.Customer.overriddencreatedon) ? (DateTime)CustomerDTO[EntityHelpers.Customer.overriddencreatedon] : default;
                ErrorEntity = EntityHelpers.Customer.ownerid;
                this.ownerid = CustomerDTO.Contains(EntityHelpers.Customer.ownerid) ? (string)CustomerDTO[EntityHelpers.Customer.ownerid] : default;
                ErrorEntity = EntityHelpers.Customer.owneridtype;
                this.owneridtype = CustomerDTO.Contains(EntityHelpers.Customer.owneridtype) ? (string)CustomerDTO[EntityHelpers.Customer.owneridtype] : default;
                ErrorEntity = EntityHelpers.Customer.pager;
                this.pager = CustomerDTO.Contains(EntityHelpers.Customer.pager) ? (string)CustomerDTO[EntityHelpers.Customer.pager] : default;
                ErrorEntity = EntityHelpers.Customer.parentcustomerid;
                this.parentcustomerid = CustomerDTO.Contains(EntityHelpers.Customer.parentcustomerid) ? (string)CustomerDTO[EntityHelpers.Customer.parentcustomerid] : default;
                ErrorEntity = EntityHelpers.Customer.parentcustomeridtype;
                this.parentcustomeridtype = CustomerDTO.Contains(EntityHelpers.Customer.parentcustomeridtype) ? (string)CustomerDTO[EntityHelpers.Customer.parentcustomeridtype] : default;
                ErrorEntity = EntityHelpers.Customer.participatesinworkflow;
                this.participatesinworkflow = CustomerDTO.Contains(EntityHelpers.Customer.participatesinworkflow) ? (bool)CustomerDTO[EntityHelpers.Customer.participatesinworkflow] : default;
                ErrorEntity = EntityHelpers.Customer.paymenttermscode;
                this.paymenttermscode = CustomerDTO.Contains(EntityHelpers.Customer.paymenttermscode) ? (int)CustomerDTO[EntityHelpers.Customer.paymenttermscode] : default;
                ErrorEntity = EntityHelpers.Customer.preferredappointmentdaycode;
                this.preferredappointmentdaycode = CustomerDTO.Contains(EntityHelpers.Customer.preferredappointmentdaycode) ? (int)CustomerDTO[EntityHelpers.Customer.preferredappointmentdaycode] : default;
                ErrorEntity = EntityHelpers.Customer.preferredappointmenttimecode;
                this.preferredappointmenttimecode = CustomerDTO.Contains(EntityHelpers.Customer.preferredappointmenttimecode) ? (int)CustomerDTO[EntityHelpers.Customer.preferredappointmenttimecode] : default;
                ErrorEntity = EntityHelpers.Customer.preferredcontactmethodcode;
                this.preferredcontactmethodcode = CustomerDTO.Contains(EntityHelpers.Customer.preferredcontactmethodcode) ? (int)CustomerDTO[EntityHelpers.Customer.preferredcontactmethodcode] : default;
                ErrorEntity = EntityHelpers.Customer.preferredequipmentid;
                this.preferredequipmentid = CustomerDTO.Contains(EntityHelpers.Customer.preferredequipmentid) ? (string)CustomerDTO[EntityHelpers.Customer.preferredequipmentid] : default;
                ErrorEntity = EntityHelpers.Customer.preferredserviceid;
                this.preferredserviceid = CustomerDTO.Contains(EntityHelpers.Customer.preferredserviceid) ? (string)CustomerDTO[EntityHelpers.Customer.preferredserviceid] : default;
                ErrorEntity = EntityHelpers.Customer.preferredsystemuserid;
                this.preferredsystemuserid = CustomerDTO.Contains(EntityHelpers.Customer.preferredsystemuserid) ? (string)CustomerDTO[EntityHelpers.Customer.preferredsystemuserid] : default;
                ErrorEntity = EntityHelpers.Customer.processid;
                this.processid = CustomerDTO.Contains(EntityHelpers.Customer.processid) ? (string)CustomerDTO[EntityHelpers.Customer.processid] : default;
                ErrorEntity = EntityHelpers.Customer.salutation;
                this.salutation = CustomerDTO.Contains(EntityHelpers.Customer.salutation) ? (string)CustomerDTO[EntityHelpers.Customer.salutation] : default;
                ErrorEntity = EntityHelpers.Customer.shippingmethodcode;
                this.shippingmethodcode = CustomerDTO.Contains(EntityHelpers.Customer.shippingmethodcode) ? (int)CustomerDTO[EntityHelpers.Customer.shippingmethodcode] : default;
                ErrorEntity = EntityHelpers.Customer.slaid;
                this.slaid = CustomerDTO.Contains(EntityHelpers.Customer.slaid) ? (string)CustomerDTO[EntityHelpers.Customer.slaid] : default;
                ErrorEntity = EntityHelpers.Customer.spousesname;
                this.spousesname = CustomerDTO.Contains(EntityHelpers.Customer.spousesname) ? (string)CustomerDTO[EntityHelpers.Customer.spousesname] : default;
                ErrorEntity = EntityHelpers.Customer.stageid;
                this.stageid = CustomerDTO.Contains(EntityHelpers.Customer.stageid) ? (string)CustomerDTO[EntityHelpers.Customer.stageid] : default;
                ErrorEntity = EntityHelpers.Customer.statecode;
                this.statecode = CustomerDTO.Contains(EntityHelpers.Customer.statecode) ? (int)CustomerDTO[EntityHelpers.Customer.statecode] : default;
                ErrorEntity = EntityHelpers.Customer.statuscode;
                this.statuscode = CustomerDTO.Contains(EntityHelpers.Customer.statuscode) ? (int)CustomerDTO[EntityHelpers.Customer.statuscode] : default;
                ErrorEntity = EntityHelpers.Customer.subscriptionid;
                this.subscriptionid = CustomerDTO.Contains(EntityHelpers.Customer.subscriptionid) ? (string)CustomerDTO[EntityHelpers.Customer.subscriptionid] : default;
                ErrorEntity = EntityHelpers.Customer.suffix;
                this.suffix = CustomerDTO.Contains(EntityHelpers.Customer.suffix) ? (string)CustomerDTO[EntityHelpers.Customer.suffix] : default;
                ErrorEntity = EntityHelpers.Customer.teamsfollowed;
                this.teamsfollowed = CustomerDTO.Contains(EntityHelpers.Customer.teamsfollowed) ? (string)CustomerDTO[EntityHelpers.Customer.teamsfollowed] : default;
                ErrorEntity = EntityHelpers.Customer.telephone1;
                this.telephone1 = CustomerDTO.Contains(EntityHelpers.Customer.telephone1) ? (string)CustomerDTO[EntityHelpers.Customer.telephone1] : default;
                ErrorEntity = EntityHelpers.Customer.telephone2;
                this.telephone2 = CustomerDTO.Contains(EntityHelpers.Customer.telephone2) ? (string)CustomerDTO[EntityHelpers.Customer.telephone2] : default;
                ErrorEntity = EntityHelpers.Customer.telephone3;
                this.telephone3 = CustomerDTO.Contains(EntityHelpers.Customer.telephone3) ? (string)CustomerDTO[EntityHelpers.Customer.telephone3] : default;
                ErrorEntity = EntityHelpers.Customer.territorycode;
                this.territorycode = CustomerDTO.Contains(EntityHelpers.Customer.territorycode) ? (int)CustomerDTO[EntityHelpers.Customer.territorycode] : default;
                ErrorEntity = EntityHelpers.Customer.transactioncurrencyid;
                this.transactioncurrencyid = CustomerDTO.Contains(EntityHelpers.Customer.transactioncurrencyid) ? (string)CustomerDTO[EntityHelpers.Customer.transactioncurrencyid] : default;
                ErrorEntity = EntityHelpers.Customer.websiteurl;
                this.websiteurl = CustomerDTO.Contains(EntityHelpers.Customer.websiteurl) ? (string)CustomerDTO[EntityHelpers.Customer.websiteurl] : default;
                ErrorEntity = EntityHelpers.Customer.yomifirstname;
                this.yomifirstname = CustomerDTO.Contains(EntityHelpers.Customer.yomifirstname) ? (string)CustomerDTO[EntityHelpers.Customer.yomifirstname] : default;
                ErrorEntity = EntityHelpers.Customer.yomilastname;
                this.yomilastname = CustomerDTO.Contains(EntityHelpers.Customer.yomilastname) ? (string)CustomerDTO[EntityHelpers.Customer.yomilastname] : default;
                ErrorEntity = EntityHelpers.Customer.yomimiddlename;
                this.yomimiddlename = CustomerDTO.Contains(EntityHelpers.Customer.yomimiddlename) ? (string)CustomerDTO[EntityHelpers.Customer.yomimiddlename] : default;
                ErrorEntity = EntityHelpers.Customer.sourcesystem;
                this.sourcesystem = CustomerDTO.Contains(EntityHelpers.Customer.sourcesystem) ? (string)CustomerDTO[EntityHelpers.Customer.sourcesystem] : default;
                ErrorEntity = EntityHelpers.Customer.clubmembershipid;
                this.clubmembershipid = CustomerDTO.Contains(EntityHelpers.Customer.clubmembershipid) ? (string)CustomerDTO[EntityHelpers.Customer.clubmembershipid] : default;
                ErrorEntity = EntityHelpers.Customer.country;
                this.country = CustomerDTO.Contains(EntityHelpers.Customer.country) ? (string)CustomerDTO[EntityHelpers.Customer.country] : default;
                ErrorEntity = EntityHelpers.Customer.customerjoineddate;
                this.customerjoineddate = CustomerDTO.Contains(EntityHelpers.Customer.customerjoineddate) ? (DateTime)CustomerDTO[EntityHelpers.Customer.customerjoineddate] : default;
                ErrorEntity = EntityHelpers.Customer.customerjoinedoutlet;
                this.customerjoinedoutlet = CustomerDTO.Contains(EntityHelpers.Customer.customerjoinedoutlet) ? (string)CustomerDTO[EntityHelpers.Customer.customerjoinedoutlet] : default;
                ErrorEntity = EntityHelpers.Customer.firstpointofpurchase;
                this.firstpointofpurchase = CustomerDTO.Contains(EntityHelpers.Customer.firstpointofpurchase) ? (string)CustomerDTO[EntityHelpers.Customer.firstpointofpurchase] : default;
                ErrorEntity = EntityHelpers.Customer.customertype;
                this.customertype = CustomerDTO.Contains(EntityHelpers.Customer.customertype) ? (int)CustomerDTO[EntityHelpers.Customer.customertype] : default;
                ErrorEntity = EntityHelpers.Customer.customerseniority;
                this.customerseniority = CustomerDTO.Contains(EntityHelpers.Customer.customerseniority) ? (int)CustomerDTO[EntityHelpers.Customer.customerseniority] : default;
                ErrorEntity = EntityHelpers.Customer.lastcoffeepurchasedate;
                this.lastcoffeepurchasedate = CustomerDTO.Contains(EntityHelpers.Customer.lastcoffeepurchasedate) ? (DateTime)CustomerDTO[EntityHelpers.Customer.lastcoffeepurchasedate] : default;
                ErrorEntity = EntityHelpers.Customer.customerstatus;
                this.customerstatus = CustomerDTO.Contains(EntityHelpers.Customer.customerstatus) ? (string)CustomerDTO[EntityHelpers.Customer.customerstatus] : default;
                ErrorEntity = EntityHelpers.Customer.changeofstatusdate;
                this.changeofstatusdate = CustomerDTO.Contains(EntityHelpers.Customer.changeofstatusdate) ? (string)CustomerDTO[EntityHelpers.Customer.changeofstatusdate] : default;
                ErrorEntity = EntityHelpers.Customer.customertier;
                this.customertier = CustomerDTO.Contains(EntityHelpers.Customer.customertier) ? (string)CustomerDTO[EntityHelpers.Customer.customertier] : default;
                ErrorEntity = EntityHelpers.Customer.totalcoffeeqtyytd;
                this.totalcoffeeqtyytd = CustomerDTO.Contains(EntityHelpers.Customer.totalcoffeeqtyytd) ? (string)CustomerDTO[EntityHelpers.Customer.totalcoffeeqtyytd] : default;
                ErrorEntity = EntityHelpers.Customer.totalmachineqtyytd;
                this.totalmachineqtyytd = CustomerDTO.Contains(EntityHelpers.Customer.totalmachineqtyytd) ? (string)CustomerDTO[EntityHelpers.Customer.totalmachineqtyytd] : default;
                ErrorEntity = EntityHelpers.Customer.grandtotalcoffeeqty;
                this.grandtotalcoffeeqty = CustomerDTO.Contains(EntityHelpers.Customer.grandtotalcoffeeqty) ? (string)CustomerDTO[EntityHelpers.Customer.grandtotalcoffeeqty] : default;
                ErrorEntity = EntityHelpers.Customer.grandtotalmachineqty;
                this.grandtotalmachineqty = CustomerDTO.Contains(EntityHelpers.Customer.grandtotalmachineqty) ? (string)CustomerDTO[EntityHelpers.Customer.grandtotalmachineqty] : default;
                ErrorEntity = EntityHelpers.Customer.channel;
                this.channel = CustomerDTO.Contains(EntityHelpers.Customer.channel) ? (string)CustomerDTO[EntityHelpers.Customer.channel] : default;
                ErrorEntity = EntityHelpers.Customer.soremarks;
                this.soremarks = CustomerDTO.Contains(EntityHelpers.Customer.soremarks) ? (string)CustomerDTO[EntityHelpers.Customer.soremarks] : default;
                ErrorEntity = EntityHelpers.Customer.membercode;
                this.membercode = CustomerDTO.Contains(EntityHelpers.Customer.membercode) ? (string)CustomerDTO[EntityHelpers.Customer.membercode] : default;
                ErrorEntity = EntityHelpers.Customer.acct_w_concern;
                this.acct_w_concern = CustomerDTO.Contains(EntityHelpers.Customer.acct_w_concern) ? (string)CustomerDTO[EntityHelpers.Customer.acct_w_concern] : default;
                ErrorEntity = EntityHelpers.Customer.kas_name;
                this.kas_name = CustomerDTO.Contains(EntityHelpers.Customer.kas_name) ? (string)CustomerDTO[EntityHelpers.Customer.kas_name] : default;
                ErrorEntity = EntityHelpers.Customer.checkname;
                this.checkname = CustomerDTO.Contains(EntityHelpers.Customer.checkname) ? (string)CustomerDTO[EntityHelpers.Customer.checkname] : default;
                ErrorEntity = EntityHelpers.Customer.contactperson;
                this.contactperson = CustomerDTO.Contains(EntityHelpers.Customer.contactperson) ? (string)CustomerDTO[EntityHelpers.Customer.contactperson] : default;
                ErrorEntity = EntityHelpers.Customer.moosourcesystem;
                this.moosourcesystem = CustomerDTO.Contains(EntityHelpers.Customer.moosourcesystem) ? (string)CustomerDTO[EntityHelpers.Customer.moosourcesystem] : default;
                ErrorEntity = EntityHelpers.Customer.MooExternalId;
                this.MooExternalId = CustomerDTO.Contains(EntityHelpers.Customer.MooExternalId) ? (string)CustomerDTO[EntityHelpers.Customer.MooExternalId] : default;
                ErrorEntity = EntityHelpers.Customer.kti_socialchannelorigin;
                this.kti_socialchannelorigin = CustomerDTO.Contains(EntityHelpers.Customer.kti_socialchannelorigin) ? (int)CustomerDTO[EntityHelpers.Customer.kti_socialchannelorigin] : default;
                ErrorEntity = EntityHelpers.Customer.kti_sourceid;
                this.kti_sourceid = CustomerDTO.Contains(EntityHelpers.Customer.kti_sourceid) ? (string)CustomerDTO[EntityHelpers.Customer.kti_sourceid] : default;

            }
            catch
            {
                throw new Exception("Customer: Invalid " + ErrorEntity);
            }
        }


    }
}
